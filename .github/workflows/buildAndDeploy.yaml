#name: Deploy Dockerhub
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#
#      - name: Restore Maven Package
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/*.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build Docker image
#        run: docker build -t chichia/todo-myapp:latest .
#
#      - name: Push Docker image to Docker Hub
#        run: docker push chichia/todo-myapp:latest


name: Deploy Dockerhub

on:
  push:
    branches:
      - main

#env:
#  REGISTRY: docker.io
#  IMAGE_NAME: chichia/mytodoapp
#  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

#      - name: Build App with Maven
#        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t chichia/mytodoapp:latest .

      - name: Push Docker Image
        run: docker push chichia/mytodoapp:latest

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build-and-push
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      - name: Set up kubectl
#        uses: azure/setup-kubectl@v3
#        with:
#          version: 'v1.29.0'
#
#      - name: Set up Kubeconfig
#        run: |
#          echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig
#          export KUBECONFIG=$PWD/kubeconfig
#
#      - name: Update Image Tag in Deployment
#        run: |
#          sed -i "s|image: .*|image: $IMAGE_NAME:latest|g" k8s/deployment.yaml
#
#      - name: Apply Kubernetes Manifests
#        run: |
#          kubectl apply -f k8s/
